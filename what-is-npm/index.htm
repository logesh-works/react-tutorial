<!doctype html><html lang="en-US"><head><meta charset="UTF-8"><meta name="viewport" content="width=device-width, initial-scale=1"><link rel="preconnect" href="https://fonts.gstatic.com"> <script>(() => {
                let theme = localStorage.getItem("theme");
                document.querySelector("html").dataset.theme = theme ? theme : "dark";
            })();</script> <meta name='robots' content='index, follow, max-image-preview:large, max-snippet:-1, max-video-preview:-1'><link media="print" href="../../wp-content/cache/autoptimize/css/autoptimize_b5360d8fe28af112b0854d10ad4c9c05.css" rel="stylesheet"><style id="aoatfcss" media="all">html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}img{border-style:none}strong{font-weight:bolder}code{font-family:monospace,monospace;font-size:1em}small{font-size:80%}button,input,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button{text-transform:none}[type=button],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}textarea{overflow:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}.site-header{border-bottom:1px solid var(--header-border-color)}.logo{display:flex;justify-content:center;align-items:center;background:var(--logo-url) no-repeat center center;height:var(--logo-height);width:var(--logo-width)}.header-wrapper{position:relative;box-sizing:border-box;padding:0;margin:0}.site-branding{flex-shrink:0;flex-grow:0;padding:0 .5rem}.site-branding a{display:block;padding:.5rem}.site-navigation{display:flex;align-items:center;justify-content:center}.site-navigation a{text-transform:uppercase;letter-spacing:.05em;font-size:.8rem;font-weight:500;color:var(--menu-color);padding:.5rem}.site-navigation a:visited{color:var(--menu-color)}.menu-toggle{display:block;background:var(--hamburger-icon) no-repeat center center;height:50px;width:50px;outline:0;border:none}.site-menu{position:absolute;top:100%;right:0;left:0;z-index:-1;visibility:hidden;opacity:0;transform:translateY(-100%);padding:0;margin:0}.site-menu li{list-style:none;border-bottom:solid 1px var(--border-color);padding:.5rem 0}.site-menu li:first-child{border-top:solid 1px var(--border-color)}.site-menu a{display:block}.sub-menu{display:none}.menu-item-has-children a{display:flex;justify-content:space-between;align-items:center}.menu-item-has-children>a:after{content:"";-webkit-mask:var(--down-icon);mask:var(--down-icon);mask-size:cover;-webkit-mask-size:cover;display:inline-block;height:1rem;width:1rem;background-color:var(--text-color);margin-left:5px}.menu-item-has-children .sub-menu li{border:none}.menu-item-has-children .sub-menu a{font-size:.85rem;margin-left:1rem;text-transform:none}svg{fill:currentColor}.switch-theme{padding:.25rem 1rem;border-radius:1rem;width:20px;height:20px}.switch-theme svg{margin-right:.25rem}html .light-mode-icon{display:none}html .dark-mode-icon{display:inline}@media (min-width:768px){.menu-item-has-children .sub-menu a{margin-left:0;font-size:.8rem}.menu-toggle{display:none}.site-branding a{padding:0}.site-menu{opacity:1;visibility:visible;position:relative;top:0;left:0;z-index:1;transform:translateY(0);display:flex;justify-content:flex-end;align-items:center}.site-navigation a{padding:1.25rem .75rem}.site-menu li{padding:0}.sub-menu a{padding:.65rem}.menu-item-has-children{position:relative}.site-menu .sub-menu{display:none;background-color:var(--submenu-bg-color);border:solid 1px var(--border-color);border-radius:.25rem;min-width:200px}.site-menu>.menu-item-has-children>a:after{content:"";-webkit-mask:var(--down-icon);mask:var(--down-icon);mask-size:cover;-webkit-mask-size:cover;display:inline-block;height:1rem;width:1rem;background-color:var(--text-color)}.site-menu>.menu-item{border-bottom:solid 1px transparent}.site-menu>.current-menu-item,.site-menu>.current-menu-parent{border-bottom:solid 1px var(--current-color)}.site-menu li:first-child,.site-menu li:last-child{border-top:none}.site-footer-widgets{display:flex;flex-direction:row;justify-content:space-between}.site-footer-sidebar{flex:1;padding:1rem}}.entry-content .wp-block-group>div{background-color:var(--body-bg-color);border:solid 1px var(--section-border-color);border-radius:15px;box-shadow:0 3px 0 rgba(84,94,111,.2);padding:20px;margin:0;margin-bottom:30px}.entry-content .wp-block-group>div ul{margin:0}.entry-content .wp-block-group>div h2{padding-left:0;margin:0;margin-bottom:10px}.page-header{padding:0 .5rem;margin-bottom:1.5rem}.search-form{margin:1rem 0}::-webkit-scrollbar{width:.5rem;height:.5rem}::-webkit-scrollbar-track{background:#b8c0c8}::-webkit-scrollbar-thumb{background:#708090;border-radius:10px}.alignright{float:right;margin:.5em 0 .5em 1em}:root{--font-family:-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,"Helvetica Neue",sans-serif;--font-family-code:"Roboto Mono",ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace;--body-bg-color:#fff;--text-color:#212529;--primary-color:#f2bb13;--header-bg-color:#fff;--header-border-color:#e7ebed;--heading-color:#374151;--link-color:#00369a;--link-color-hover:#00369a;--title-color:#323232;--footer-bg-color:#f8f9fa;--footer-color:#495057;--footer-link-color:#495057;--footer-link-color-hover:#00369a;--ads-label-color:#666;--down-icon:url('data:image/svg+xml;utf8,');--hamburger-icon:url('data:image/svg+xml;utf8,');--x-icon:url('data:image/svg+xml;utf8,');--current-color:#f9dc5c;--menu-color:#323330;--border-color:#f4f4f4;--hover-background-color:#f4f4f4;--menu-background-color:#fff;--submenu-bg-color:#fff;--toggle-color:#f4f4f4;--code-badge-color:#fff;--button-bg-color:#ffc107;--button-color:#323330;--button-bg-color-hover:#ffc107d3;--button-color-hover:#323330;--button-border-color:#ffc107;--section-border-color:#ddd;--inline-code-bg-color:#f5f5f5;--inline-code-color:#da1039;--input-bg-color:#fff;--input-color:#212529;--input-border-color:#e3e3e3;--input-border-focus-color:#e3e3e3;--image-filter:grayscale(0%);--themeable-image-filter:none;--svg-color:#323330;--page-nav-bg-color:#fff;--mark-bg-color:#fff6ea;--feature-image-bg-color:#ffd040;--feature-image-filter:grayscale(100%);--fancy-list-color:rgba(0, 0, 0, 0.15);--output-bg-color:#f9fafb;--output-border-color:#e7ebed;--post-box-shadow:rgba(50, 50, 93, 0.25) 0px 2px 5px -1px,rgba(0, 0, 0, 0.3) 0px 1px 3px -1px;--post-border:none}.wp-block-code{position:relative}.wp-block-image{margin-bottom:1em}.wp-block-image img{max-width:100%}.wp-block-image:not(.is-style-rounded) img{border-radius:inherit}.wp-block-image .alignright{display:table}.wp-block-image .alignright{float:right;margin:.5em 0 .5em 1em}.feature-page{display:flex;align-items:flex-start;padding:0;margin:0 0 1rem}.feature-page>.feature-image{width:150px;height:150px;margin:0 1rem 0 0;border-radius:50%;background-color:var(--feature-image-bg-color, "#fff");display:flex;justify-content:center;align-items:center}.feature-page>.feature-body{flex:1}.feature-page h3{margin:0 0 .5rem}.feature-cat{background-color:var(--body-bg-color,#fff);border:solid 1px var(--section-border-color,#ddd);border-radius:.5rem;box-shadow:0 3px 0 rgb(84 94 111/20%);padding:.5rem 1rem;margin:0;margin-bottom:30px;display:flex;flex-direction:column;justify-content:space-between}.feature-cat-title{font-size:1rem;border-bottom:1px solid #ddd;position:relative;display:flex;justify-content:space-between;padding:.5rem 0;margin-bottom:0;text-transform:uppercase}.feature-cat-title a{font-weight:700;color:var(--heading-color,#333)}.feature-cat-title>i.line{width:1.15em;border-bottom:1px solid #b55;position:absolute;bottom:-1px}.feature-cat-title div{display:flex;justify-content:space-between;align-items:center}.feature-cat-title img{margin-right:.3rem;filter:var(--themeable-image-filter, "none")}.feature-cat .count{font-size:.9rem}.feature-cat .feature-list li{margin:0 0 1rem}.feature-list{list-style:none}.feature-list li:before{content:"";border-color:transparent #ccc;border-style:solid;border-width:.3em 0 .3em .35em;display:block;height:0;width:0;left:-.75rem;top:1.25rem;position:relative;background:0 0;margin:0}@media (min-width:768px){.feature-cats{display:grid;grid-template-columns:1fr 1fr;column-gap:3rem}}.more-link{height:1rem;border-bottom:1px solid #ddd;text-align:center}.more-link .btn{font-size:10px;padding-bottom:0;border-radius:2px;border-bottom-width:2px;font-weight:600;text-transform:uppercase;color:#fff;background-color:var(--button-bg-color,#e73827);border-color:var(--button-border-color,transparent);padding:1px 5px;display:inline-block;text-align:center;white-space:nowrap;vertical-align:middle;border:1px solid transparent;box-sizing:border-box}html{background:var(--body-bg-color);color:var(--text-color);font-size:1rem}body{font-family:var(--font-family);font-size:1rem;line-height:1.8}img{height:auto;max-width:100%}figure{margin:1em 0}h1,h2,h3{font-weight:400;color:var(--heading-color);padding:0}h1{font-size:1.875rem;margin-bottom:1.7rem}h2{font-size:1.5rem;margin-bottom:1rem}h3{font-size:1.3125rem;margin-bottom:.875rem}.screen-reader-text{border:0;clip:rect(1px,1px,1px,1px);clip-path:inset(50%);height:1px;margin:-1px;overflow:hidden;padding:0;position:fixed!important;width:1px;word-wrap:normal!important;outline-style:dashed;outline-width:.125rem;outline-color:var(--text-color)}a{color:var(--link-color);text-decoration:none}a:visited{color:var(--link-color)}ul{padding:0}.header-wrapper{display:flex;justify-content:space-between;align-items:center}.breadcrumbs{font-size:.9rem;padding:0 .5rem}article{padding:0 .5rem}aside{padding:1rem .5rem}.site-footer{max-width:100%}.site-footer-widgets{display:flex;flex-direction:column}.site-footer{padding:1rem}.site-footer-sidebar{margin-bottom:1rem}.site-footer{padding:10px;background-color:var(--footer-bg-color);color:var(--footer-color)}.site-footer a{color:var(--footer-link-color)}.entry-title{color:var(--title-color);font-weight:400}.entry-title a{font-size:1.25rem}.post-excerpt{background-color:var(--body-bg-color);border:solid 1px var(--section-border-color);border-radius:1rem;box-shadow:0 3px 0 rgb(84 94 111/20%);padding:.5rem 1rem;margin:0;margin-bottom:1.5rem}.widget-title{font-weight:700;font-size:.8rem;letter-spacing:1px;text-transform:uppercase;padding:0 0 1rem;margin:0}.widget_search{margin-bottom:1.5rem}.widget .menu{margin:0 0 1.5rem}.ad{text-align:left;margin:.5rem 0}p code{font-family:var(--font-family-code);font-size:.875rem;font-weight:400;background-color:var(--inline-code-bg-color);color:var(--inline-code-color);padding:.25em .5em .25em;border-radius:3px}.wp-block-code code{white-space:pre!important}.ad-300{width:300px;height:280px;overflow:hidden;}.ad:before{content:"Advertisements";color:var(--ads-label-color);font-size:10px;display:block;text-transform:uppercase;text-align:center}.ad-336{width:336px;height:320px;overflow:hidden;}code.hljs{padding:1rem}.search-form{overflow:hidden;width:100%}.search-form input[type=search]{border:1px solid var(--input-border-color);border-radius:3px;font-size:1rem;padding:16px;width:100%;outline-offset:-2px;outline:0;background-color:var(--input-bg-color);color:var(--input-color)}.search-form input[type=submit]{border:0;clip:rect(0,0,0,0);height:1px;margin:-1px;padding:0;position:absolute;width:1px}.entry-content ul{padding-left:1rem}.entry-content li{margin:0 0 .5rem 1rem}.widget ul{margin:0;padding:0}.widget li{list-style-type:none;text-align:left;word-wrap:break-word;font-size:1rem;padding:.25rem 0}.widget li:first-child{padding-top:0}.widget li a{display:inline-block;padding:0 0 .25rem}.entry-content .wp-block-group ul{padding-left:0;list-style:none}.entry-content .wp-block-group ul>li:before{content:"";border-color:transparent #ccc;border-style:solid;border-width:.3em 0 .3em .35em;display:block;height:0;width:0;left:-.75rem;top:1.25rem;position:relative;background:0 0;margin:0}.wp-block-image .alignright{float:right;margin:.5em 0 .5em 1em}@media (min-width:768px){body{font-size:1rem}}@media (min-width:1140px){body{font-size:1rem}.site{margin:0 auto;display:flex;flex-direction:column;overflow:hidden}.site-inner{display:flex;justify-content:space-between}.site-main{width:730px}aside{width:300px;padding:1rem .5rem}.wrap{width:1050px;margin:0 auto}.site-header{background:var(--header-bg-color);width:100%}.header-wrapper{display:flex;justify-content:space-between;align-items:center}}.wth-title{display:inline-block;margin-right:1rem}.wth-btn{display:inline-block;border:none;outline:0;padding:10px 25px;border-radius:3px;font-size:.9rem}.wth-form-wrapper{margin-bottom:4rem}.wth-btn-submit{background:var(--button-bg-color);color:var(--button-color);border:solid 1px var(--button-border-color);margin-top:10px}.wth-btn-cancel{background-color:#fff;border:solid 1px var(--button-bg-color);color:var(--button-bg-color);margin-top:10px}.wth-message{background-color:var(--input-bg-color);border:1px solid var(--input-border-color);min-height:150px;width:96%;padding:2%;display:block;border-radius:5px;outline:0;color:var(--text-color)}.wth-form{display:block;text-align:left}.wth-form.hidden{display:none}.hljs{display:block;overflow-x:auto;padding:.5em;background:#282828}.hljs{color:#ebdbb2}.hljs-keyword{color:#fb4934}.hljs-title{color:#83a598}.hljs-meta{color:#fe8019}.hljs-class{color:#8ec07c}.hljs-comment{color:#928374}.hljs-comment{font-style:italic}.hljs-built_in{color:#83a598}.hljs-string{color:#b8bb26}</style><link rel="stylesheet" media="print" href="../../wp-content/cache/autoptimize/css/autoptimize_75a4bae395aa08480b0058c686a98332.css" onload="this.onload=null;this.media='all';"><noscript id="aonoscrcss"><link media="all" href="../../wp-content/cache/autoptimize/css/autoptimize_75a4bae395aa08480b0058c686a98332.css" rel="stylesheet"></noscript><title>Usestate?</title><meta name="description" content="In this tutorial, you will learn how about npm and how to use the npm CLI to install new packages."><link rel="canonical" href="index.htm"><meta property="og:locale" content="en_US"><meta property="og:type" content="article"><meta property="og:title" content="Usestate?"><meta property="og:description" content="In this tutorial, you will learn how about npm and how to use the npm CLI to install new packages."><meta property="og:url" content="/nodejs-tutorial/what-is-npm/"><meta property="og:site_name" content="JavaScript Tutorial"><meta property="article:modified_time" content="2021-08-12T01:16:11+00:00"><meta name="twitter:card" content="summary_large_image"><meta name="twitter:label1" content="Est. reading time"><meta name="twitter:data1" content="4 minutes"> <script type="application/ld+json" class="yoast-schema-graph">{"@context":"https://schema.org","@graph":[{"@type":"WebPage","@id":"/nodejs-tutorial/what-is-npm/","url":"/nodejs-tutorial/what-is-npm/","name":"Usestate?","isPartOf":{"@id":"/#website"},"datePublished":"2020-07-02T07:44:25+00:00","dateModified":"2021-08-12T01:16:11+00:00","description":"In this tutorial, you will learn how about npm and how to use the npm CLI to install new packages.","breadcrumb":{"@id":"/nodejs-tutorial/what-is-npm/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["/nodejs-tutorial/what-is-npm/"]}]},{"@type":"BreadcrumbList","@id":"/nodejs-tutorial/what-is-npm/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"/"},{"@type":"ListItem","position":2,"name":"React.js Tutorial","item":"/nodejs-tutorial/"},{"@type":"ListItem","position":3,"name":"Usestate"}]},{"@type":"WebSite","@id":"/#website","url":"/","name":"JavaScript Tutorial","description":"A comprehensive JavaScript Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}</script> <link rel='dns-prefetch' href='//fonts.googleapis.com'> <noscript><link rel='stylesheet' href='../../css2?family=Roboto+Mono%3Awght%40400&#038;display=swap&#038;ver=1.0.0' type='text/css' media='all'></noscript><link rel='stylesheet' id='ev-google-fonts-css' href='../../css2?family=Roboto+Mono%3Awght%40400&#038;display=swap&#038;ver=1.0.0' type='text/css' media='print' onload="this.onload=null;this.media='all';"><style id='classic-theme-styles-inline-css' type='text/css'>/*! This file is auto-generated */
.wp-block-button__link{color:#fff;background-color:#32373c;border-radius:9999px;box-shadow:none;text-decoration:none;padding:calc(.667em + 2px) calc(1.333em + 2px);font-size:1.125em}.wp-block-file__button{background:#32373c;color:#fff;text-decoration:none}</style><style id='global-styles-inline-css' type='text/css'>body{--wp--preset--color--black: #000000;--wp--preset--color--cyan-bluish-gray: #abb8c3;--wp--preset--color--white: #ffffff;--wp--preset--color--pale-pink: #f78da7;--wp--preset--color--vivid-red: #cf2e2e;--wp--preset--color--luminous-vivid-orange: #ff6900;--wp--preset--color--luminous-vivid-amber: #fcb900;--wp--preset--color--light-green-cyan: #7bdcb5;--wp--preset--color--vivid-green-cyan: #00d084;--wp--preset--color--pale-cyan-blue: #8ed1fc;--wp--preset--color--vivid-cyan-blue: #0693e3;--wp--preset--color--vivid-purple: #9b51e0;--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple: linear-gradient(135deg,rgba(6,147,227,1) 0%,rgb(155,81,224) 100%);--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan: linear-gradient(135deg,rgb(122,220,180) 0%,rgb(0,208,130) 100%);--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange: linear-gradient(135deg,rgba(252,185,0,1) 0%,rgba(255,105,0,1) 100%);--wp--preset--gradient--luminous-vivid-orange-to-vivid-red: linear-gradient(135deg,rgba(255,105,0,1) 0%,rgb(207,46,46) 100%);--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray: linear-gradient(135deg,rgb(238,238,238) 0%,rgb(169,184,195) 100%);--wp--preset--gradient--cool-to-warm-spectrum: linear-gradient(135deg,rgb(74,234,220) 0%,rgb(151,120,209) 20%,rgb(207,42,186) 40%,rgb(238,44,130) 60%,rgb(251,105,98) 80%,rgb(254,248,76) 100%);--wp--preset--gradient--blush-light-purple: linear-gradient(135deg,rgb(255,206,236) 0%,rgb(152,150,240) 100%);--wp--preset--gradient--blush-bordeaux: linear-gradient(135deg,rgb(254,205,165) 0%,rgb(254,45,45) 50%,rgb(107,0,62) 100%);--wp--preset--gradient--luminous-dusk: linear-gradient(135deg,rgb(255,203,112) 0%,rgb(199,81,192) 50%,rgb(65,88,208) 100%);--wp--preset--gradient--pale-ocean: linear-gradient(135deg,rgb(255,245,203) 0%,rgb(182,227,212) 50%,rgb(51,167,181) 100%);--wp--preset--gradient--electric-grass: linear-gradient(135deg,rgb(202,248,128) 0%,rgb(113,206,126) 100%);--wp--preset--gradient--midnight: linear-gradient(135deg,rgb(2,3,129) 0%,rgb(40,116,252) 100%);--wp--preset--font-size--small: 13px;--wp--preset--font-size--medium: 20px;--wp--preset--font-size--large: 36px;--wp--preset--font-size--x-large: 42px;--wp--preset--spacing--20: 0.44rem;--wp--preset--spacing--30: 0.67rem;--wp--preset--spacing--40: 1rem;--wp--preset--spacing--50: 1.5rem;--wp--preset--spacing--60: 2.25rem;--wp--preset--spacing--70: 3.38rem;--wp--preset--spacing--80: 5.06rem;--wp--preset--shadow--natural: 6px 6px 9px rgba(0, 0, 0, 0.2);--wp--preset--shadow--deep: 12px 12px 50px rgba(0, 0, 0, 0.4);--wp--preset--shadow--sharp: 6px 6px 0px rgba(0, 0, 0, 0.2);--wp--preset--shadow--outlined: 6px 6px 0px -3px rgba(255, 255, 255, 1), 6px 6px rgba(0, 0, 0, 1);--wp--preset--shadow--crisp: 6px 6px 0px rgba(0, 0, 0, 1);}:where(.is-layout-flex){gap: 0.5em;}:where(.is-layout-grid){gap: 0.5em;}body .is-layout-flow > .alignleft{float: left;margin-inline-start: 0;margin-inline-end: 2em;}body .is-layout-flow > .alignright{float: right;margin-inline-start: 2em;margin-inline-end: 0;}body .is-layout-flow > .aligncenter{margin-left: auto !important;margin-right: auto !important;}body .is-layout-constrained > .alignleft{float: left;margin-inline-start: 0;margin-inline-end: 2em;}body .is-layout-constrained > .alignright{float: right;margin-inline-start: 2em;margin-inline-end: 0;}body .is-layout-constrained > .aligncenter{margin-left: auto !important;margin-right: auto !important;}body .is-layout-constrained > :where(:not(.alignleft):not(.alignright):not(.alignfull)){max-width: var(--wp--style--global--content-size);margin-left: auto !important;margin-right: auto !important;}body .is-layout-constrained > .alignwide{max-width: var(--wp--style--global--wide-size);}body .is-layout-flex{display: flex;}body .is-layout-flex{flex-wrap: wrap;align-items: center;}body .is-layout-flex > *{margin: 0;}body .is-layout-grid{display: grid;}body .is-layout-grid > *{margin: 0;}:where(.wp-block-columns.is-layout-flex){gap: 2em;}:where(.wp-block-columns.is-layout-grid){gap: 2em;}:where(.wp-block-post-template.is-layout-flex){gap: 1.25em;}:where(.wp-block-post-template.is-layout-grid){gap: 1.25em;}.has-black-color{color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-color{color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-color{color: var(--wp--preset--color--white) !important;}.has-pale-pink-color{color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-color{color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-color{color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-color{color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-color{color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-color{color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-color{color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-color{color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-color{color: var(--wp--preset--color--vivid-purple) !important;}.has-black-background-color{background-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-background-color{background-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-background-color{background-color: var(--wp--preset--color--white) !important;}.has-pale-pink-background-color{background-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-background-color{background-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-background-color{background-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-background-color{background-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-background-color{background-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-background-color{background-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-background-color{background-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-background-color{background-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-background-color{background-color: var(--wp--preset--color--vivid-purple) !important;}.has-black-border-color{border-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-border-color{border-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-border-color{border-color: var(--wp--preset--color--white) !important;}.has-pale-pink-border-color{border-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-border-color{border-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-border-color{border-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-border-color{border-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-border-color{border-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-border-color{border-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-border-color{border-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-border-color{border-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-border-color{border-color: var(--wp--preset--color--vivid-purple) !important;}.has-vivid-cyan-blue-to-vivid-purple-gradient-background{background: var(--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple) !important;}.has-light-green-cyan-to-vivid-green-cyan-gradient-background{background: var(--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan) !important;}.has-luminous-vivid-amber-to-luminous-vivid-orange-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange) !important;}.has-luminous-vivid-orange-to-vivid-red-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-orange-to-vivid-red) !important;}.has-very-light-gray-to-cyan-bluish-gray-gradient-background{background: var(--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray) !important;}.has-cool-to-warm-spectrum-gradient-background{background: var(--wp--preset--gradient--cool-to-warm-spectrum) !important;}.has-blush-light-purple-gradient-background{background: var(--wp--preset--gradient--blush-light-purple) !important;}.has-blush-bordeaux-gradient-background{background: var(--wp--preset--gradient--blush-bordeaux) !important;}.has-luminous-dusk-gradient-background{background: var(--wp--preset--gradient--luminous-dusk) !important;}.has-pale-ocean-gradient-background{background: var(--wp--preset--gradient--pale-ocean) !important;}.has-electric-grass-gradient-background{background: var(--wp--preset--gradient--electric-grass) !important;}.has-midnight-gradient-background{background: var(--wp--preset--gradient--midnight) !important;}.has-small-font-size{font-size: var(--wp--preset--font-size--small) !important;}.has-medium-font-size{font-size: var(--wp--preset--font-size--medium) !important;}.has-large-font-size{font-size: var(--wp--preset--font-size--large) !important;}.has-x-large-font-size{font-size: var(--wp--preset--font-size--x-large) !important;}
.wp-block-navigation a:where(:not(.wp-element-button)){color: inherit;}
:where(.wp-block-post-template.is-layout-flex){gap: 1.25em;}:where(.wp-block-post-template.is-layout-grid){gap: 1.25em;}
:where(.wp-block-columns.is-layout-flex){gap: 2em;}:where(.wp-block-columns.is-layout-grid){gap: 2em;}
.wp-block-pullquote{font-size: 1.5em;line-height: 1.6;}</style><link rel="https://api.w.org/" href="../../wp-json/index.htm"><link rel="alternate" type="application/json" href="../../wp-json/wp/v2/pages/87307"><link rel="EditURI" type="application/rsd+xml" title="RSD" href="../../xmlrpc.php?rsd"><meta name="generator" content="WordPress 6.3.1"><link rel='shortlink' href='/?p=87307'><link rel="alternate" type="application/json+oembed" href="../../wp-json/oembed/1.0/embed-18?url=https%3A%2F%2Fwww.javascripttutorial.net%2Fnodejs-tutorial%2Fwhat-is-npm%2F"><link rel="alternate" type="text/xml+oembed" href="../../wp-json/oembed/1.0/embed-19?url=https%3A%2F%2Fwww.javascripttutorial.net%2Fnodejs-tutorial%2Fwhat-is-npm%2F&#038;format=xml"><style>html{--logo-url:url("../../wp-content/uploads/2021/04/javascripttutorial.svg");--logo-width:154px;--logo-height:55px;--icon-copy-url:url("../../wp-content/themes/evolution/img/copy-light.svg");--icon-check-url:url("../../wp-content/themes/evolution/img/check-light.svg");--feature-image-bg-color:#fff}html[data-theme="dark"]{--logo-url:url("../../wp-content/uploads/2021/04/javascripttutorial_dark.svg");--logo-width:154px;--logo-height:55px}html[data-theme="dark"]{color-scheme:dark;--body-bg-color:#171717;--text-color:#e3e3e3;--primary-color:#4db2ff;--header-bg-color:#171717;--header-border-color:#454545;--heading-color:#e3e3e3;--link-color:#4db2ff;--link-color-hover:#0091ff;--title-color:#e3e3e3;--list-item-color:#e3e3e3;--badge-bg-color:#e3e3e3;--badge-color:#323330;--code-badge-color:#fff;--footer-bg-color:#2e2e2e;--footer-color:#e3e3e3;--footer-link-color:#e3e3e3;--footer-link-color-hover:#c7c7c7;--ads-label-color:#e3e3e3;--down-icon:url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" fill="currentColor" viewbox="0 0 16 16"><path fill-rule="evenodd" d="M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"></path></svg>');--hamburger-icon:url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewbox="0 0 24 24" fill="white"><path d="M24 6h-24v-4h24v4zm0 4h-24v4h24v-4zm0 8h-24v4h24v-4z"></path></svg>');--x-icon:url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="36" height="36" fill="white" viewbox="0 0 16 16"><path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z"></path></svg>');--current-color:#e3e3e3;--menu-color:#e3e3e3;--border-color:#454545;--hover-background-color:#242424;--menu-background-color:#171717;--submenu-bg-color:#2e2e2e;--toggle-color:#242424;--button-bg-color:#282828;--button-color:#e3e3e3;--button-bg-color-hover:#323330;--button-color-hover:#e3e3e3;--button-border-color:#282828;--section-border-color:#454545;--inline-code-bg-color:#454545;--inline-code-color:#e3e3e3;--input-bg-color:#2e2e2e;--input-color:#e3e3e3;--input-border-color:#e3e3e3;--input-border-focus-color:#4db2ff;--image-filter:grayscale(50%);--themeable-image-filter:invert(1) sepia(0) saturate(1) hue-rotate(0deg);--svg-color:#f4f4f4;--page-nav-bg-color:inherit;--mark-bg-color:#454545;--feature-image-bg-color:#282828;--feature-image-filter:grayscale(50%);--fancy-list-color:#e3e3e3;--output-bg-color:#2e2e2e;--output-border-color:#2e2e2e;--svg-image-filter:invert(100%)}</style><style media="print">.site-main:before{content:url("../../wp-content/uploads/2021/04/javascripttutorial.svg");display:block;margin-right:auto;margin-left:auto;text-align:center;max-width:200px}</style> <script src="../../ads/ob/tage/aaw.javascripttutorial.js" async=""></script>  <script async="" src="../../gtag/js?id=G-Q3E3XZ7RL7"></script> <script>window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-Q3E3XZ7RL7');</script> <link rel="icon" href="../../wp-content/uploads/2020/02/favicon-150x150.png" sizes="32x32"><link rel="icon" href="../../wp-content/uploads/2020/02/favicon-300x300.png" sizes="192x192"><link rel="apple-touch-icon" href="../../wp-content/uploads/2020/02/favicon-300x300.png"><meta name="msapplication-TileImage" content="/wp-content/uploads/2020/02/favicon-300x300.png"></head><body class="page-template-default page page-id-87307 page-child parent-pageid-87234"><div id="page" class="site"> <a class="skip-link screen-reader-text" href="#primary">Skip to content</a><header id="masthead" class="site-header"><div class="wrap header-wrapper"><div class="site-branding"> <a href="/" rel="home" aria-current="page" class="logo" aria-label="Go to the homepage"> </a></div></div></header><div class="site-inner wrap"><main id="primary" class="site-main"><p class="breadcrumbs"><span><span><a href="/">Home</a></span> » <span><a href="../index.html">React.js Tutorial</a></span> » <span class="breadcrumb_last" aria-current="page">Usestate</span></span></p><article id="post-87307" class="post-87307 page type-page status-publish hentry"><header class="entry-header"><h1 class="entry-title">Usestate</h1></header><div class="entry-content"><p><strong>Summary</strong>: in this tutorial, you will learn how about Usestate hooks.</p><p dir=ltr><span>In this article, we will learn about the useState hook in React, why it is used, and learn its implementation with the help of examples.</span></p><h3><span>What is useState hook in React?</span></h3><p dir=ltr><span>useState() hook</span></a><span> allows one to declare a state variable inside a function. It should be noted that one use of useState() can only be used to declare one state variable.&nbsp;It was introduced in version 16.8.</span></p><h3><span>Reason to choose useState hook</span></h3><p dir=ltr><b><strong>Functional components</strong></b><span> are some of the more commonly used components in ReactJS. Most developers prefer using functional components over class-based components for the simple reason that functional components require less coding (on the developer&#8217;s part). However, two main features for the class are lost when one goes with a functional component &#8211; a dedicated state that persists through render calls as well as the use of lifecycle functions to control how the component looks and behaves at separate stages of its lifecycle.</span></p><h3><b><strong>Importing useState hook:</strong></b></h3><p dir=ltr><span>To import the useState hook, write the following code at the top level of your component</span></p><span>import { useState } from "react";</span></pre><h3><span>Structure of useState hook</span></h3><p dir=ltr><span>This hooks takes some initial state and returns two value. First value contains the state and the second value is a function which updates the state. The value passed in useState will be treated as the default value</span></p><p dir=ltr><b><strong>Syntax:</strong></b></p><pre style="background-color: grey;"><span>const [var, setVar] = useState(0);</span></pre><h3><span>Internal working of useState hook</span></h3><p dir=ltr><span>The working of useState() might seem weird at first. After all, with every render, the function being rendered is a new one &#8211; how does the &#8216;state&#8217; persist then? Behind the scenes, there&#8217;s an object representing the functional component in the memory, which has a stack of its own. Whenever the useState() hook is used, the value of the state variable is changed and the new variable is stored in a new cell in the stack. The stack pointer is incremented simultaneously to point toward the last cell. The value pointed to by this stack pointer is used after every render. On a deliberate refresh from the user, the stack is dumped, and a fresh allocation in the memory is done when the component is rendered.&nbsp;</span></p><div id=GFG_AD_Desktop_InContent_ATF_336x280 style=text-align:center;max-height:280px></div><p dir=ltr><b><strong>Example:</strong></b><span> Program to demonstrate the basic use of useState() hook.&nbsp;</span></p><p dir=ltr><b><strong>Filename- App.js: </strong></b><span>Create a React app and edit the </span><b><strong>App.js</strong></b><span> file in src folder as:</span></p><div class=noIdeBtnDiv><div class=responsive-tabs><h2 class=tabtitle>javascript</h2><div class=tabcontent></p><div class=code-block><div class=code-gutter><div class=editor-buttons-container><div class=editor-buttons><div class=editor-buttons-div title="Run and Edit"><i id=copy-code-button title="Copy Code" class="gfg-icon gfg-icon_copy code-sidebar-button padding-2px copy-code-button"></i></p><div id=run-and-edit-loader class=ring-load></div><p><i id=run-and-edit-button title="Edit Code" lang=jscript class="gfg-icon gfg-icon_edit_1 padding-2px code-sidebar-button"></i><br><i id=close-code-editor-button title="Close Editor" class="gfg-icon gfg-icon_close-editor padding-2px code-sidebar-button close-code-editor-button"></i></p><div id=run-code-loader class=ring-load></div><p><i id=run-code-button lang=jscript title="Run Code and See Output" class="gfg-icon gfg-icon_play padding-2px code-sidebar-button"></i></p><div id=generate-url-loader class=ring-load></div><p><i id=generate-url-and-run-button title="Run Code and Generate IDE URL" lang=jscript class="gfg-icon gfg-icon_link padding-2px code-sidebar-button generate-url-and-run-button"></i><br><i title="Dark Mode" class="gfg-icon gfg-icon_dark-toggle padding-2px code-sidebar-button dark-editor-button"></i><br><i id=edit-on-ide-button title="Edit on IDE" lang=jscript class="gfg-icon gfg-icon_code padding-2px code-sidebar-button edit-on-ide-button"></i></div></p></div></p></div></p></div><div class=code-container><div id=highlighter_779895 class="syntaxhighlighter nogutter"><table border=0 cellpadding=0 cellspacing=0><tbody><tr><td class=code><div class=container><div class="line number1 index0 alt2"><code class=plain>import React, { useState } from </code><code class=string>'react'</code><code class=plain>;</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class=keyword>function</code> <code class=plain>App() {</code></div><div class="line number4 index3 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>const click = useState(</code><code class=string>'Website'</code><code class=plain>);</code></div><div class="line number5 index4 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>return</code> <code class=plain>(</code></div><div class="line number6 index5 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>&lt;h1>Welcome to {click}&lt;/h1></code></div><div class="line number7 index6 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>);</code></div><div class="line number8 index7 alt1"><code class=plain>}</code></div><div class="line number9 index8 alt2">&nbsp;</div><div class="line number10 index9 alt1"><code class=plain>export </code><code class=keyword>default</code> <code class=plain>App;</code></div></div></td></tr></tbody></table></div></div><div class=code-editor-container></div></p></div><div class=code-output-container><div class=output-block><i id=output-icon title=Output class="gfg-icon gfg-icon_arrow-right-editor padding-2px code-sidebar-button output-icon"></i></p><pre style="background-color: grey;" class=output-pre></pre></p></div><div class=ide-link-div><i id=copy-url-button title="Copy Generated Ide URL" class="gfg-icon gfg-icon_copy padding-2px code-sidebar-button copy-url-button"></i></p><pre style="background-color: grey;" id=ide-url></pre></p></div></p></div></div></div></div><p dir=ltr><b><strong>Output:</strong></b></p><p dir=ltr></p><p dir=ltr><span>The value returned by useState() consists of an array with two values. The first value is the initial (or starting) value of the state variable, while the second value is a reference to the function that can be used to update the variable. One can always use array destructuring to assign both values at once so that they can be used in the component. Of course, they can also be assigned separately by assigning a variable with useState() and assigning its first index to one variable and its second index to another (destructuring just makes this easier).</span></p><h3><b><strong>Updating state using useState hook</strong></b></h3><p dir=ltr><span>To update states using useState we will use the second value passed in useState hook which updates the first value</span></p><div style="text-align:center;margin:20px 0;max-height:280px" id=GFG_AD_gfg_outstream_incontent></div><p dir=ltr><b><strong>Example:</strong></b><span> Program to demonstrate the use of a state variable in a functional component and how to update it accordingly.&nbsp;</span></p><p dir=ltr><b><strong>Filename- App.js</strong></b></p><div class=noIdeBtnDiv><div class=responsive-tabs><h2 class=tabtitle>javascript</h2><div class=tabcontent></p><div class=code-block><div class=code-gutter><div class=editor-buttons-container><div class=editor-buttons><div class=editor-buttons-div title="Run and Edit"><i id=copy-code-button title="Copy Code" class="gfg-icon gfg-icon_copy code-sidebar-button padding-2px copy-code-button"></i></p><div id=run-and-edit-loader class=ring-load></div><p><i id=run-and-edit-button title="Edit Code" lang=jscript class="gfg-icon gfg-icon_edit_1 padding-2px code-sidebar-button"></i><br><i id=close-code-editor-button title="Close Editor" class="gfg-icon gfg-icon_close-editor padding-2px code-sidebar-button close-code-editor-button"></i></p><div id=run-code-loader class=ring-load></div><p><i id=run-code-button lang=jscript title="Run Code and See Output" class="gfg-icon gfg-icon_play padding-2px code-sidebar-button"></i></p><div id=generate-url-loader class=ring-load></div><p><i id=generate-url-and-run-button title="Run Code and Generate IDE URL" lang=jscript class="gfg-icon gfg-icon_link padding-2px code-sidebar-button generate-url-and-run-button"></i><br><i title="Dark Mode" class="gfg-icon gfg-icon_dark-toggle padding-2px code-sidebar-button dark-editor-button"></i><br><i id=edit-on-ide-button title="Edit on IDE" lang=jscript class="gfg-icon gfg-icon_code padding-2px code-sidebar-button edit-on-ide-button"></i></div></p></div></p></div></p></div><div class=code-container><div id=highlighter_406122 class="syntaxhighlighter nogutter"><table border=0 cellpadding=0 cellspacing=0><tbody><tr><td class=code><div class=container><div class="line number1 index0 alt2"><code class=plain>import React, { useState } from </code><code class=string>'react'</code><code class=plain>;</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class=keyword>function</code> <code class=plain>App() {</code></div><div class="line number4 index3 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>const [click, setClick] = useState(0);</code></div><div class="line number5 index4 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>// using array destructuring here</code></div><div class="line number6 index5 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>// to assign initial value 0</code></div><div class="line number7 index6 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>// to click and a reference to the function</code></div><div class="line number8 index7 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>// that updates click to setClick</code></div><div class="line number9 index8 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>return</code> <code class=plain>(</code></div><div class="line number10 index9 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>&lt;div></code></div><div class="line number11 index10 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>&lt;p>You clicked {click} times&lt;/p></code></div><div class="line number12 index11 alt1">&nbsp;</div><div class="line number13 index12 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>&lt;button onClick={() => setClick(click + 1)}></code></div><div class="line number14 index13 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>Click me</code></div><div class="line number15 index14 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>&lt;/button></code></div><div class="line number16 index15 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>&lt;/div></code></div><div class="line number17 index16 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>);</code></div><div class="line number18 index17 alt1"><code class=plain>}</code></div><div class="line number19 index18 alt2">&nbsp;</div><div class="line number20 index19 alt1"><code class=plain>export </code><code class=keyword>default</code> <code class=plain>App;</code></div></div></td></tr></tbody></table></div></div><div class=code-editor-container></div></p></div><div class=code-output-container><div class=output-block><i id=output-icon title=Output class="gfg-icon gfg-icon_arrow-right-editor padding-2px code-sidebar-button output-icon"></i></p><pre style="background-color: grey;" class=output-pre></pre></p></div><div class=ide-link-div><i id=copy-url-button title="Copy Generated Ide URL" class="gfg-icon gfg-icon_copy padding-2px code-sidebar-button copy-url-button"></i></p><pre style="background-color: grey;" id=ide-url></pre></p></div></p></div></div></div></div><p dir=ltr><b><strong>Output:</strong></b></p><p dir=ltr><img src=https://media.geeksforgeeks.org/wp-content/uploads/20200517191328/20200517_123534.gif width=inherit height=inherit></p><p dir=ltr><b><strong>Example:</strong></b><span> Program to demonstrate the use of the last value while updating the value of the &#8216;state&#8217; variable.&nbsp;</span></p><p dir=ltr><b><strong>Filename- App.js</strong></b></p><div class=noIdeBtnDiv><div class=responsive-tabs><h2 class=tabtitle>javascript</h2><div class=tabcontent></p><div class=code-block><div class=code-gutter><div class=editor-buttons-container><div class=editor-buttons><div class=editor-buttons-div title="Run and Edit"><i id=copy-code-button title="Copy Code" class="gfg-icon gfg-icon_copy code-sidebar-button padding-2px copy-code-button"></i></p><div id=run-and-edit-loader class=ring-load></div><p><i id=run-and-edit-button title="Edit Code" lang=jscript class="gfg-icon gfg-icon_edit_1 padding-2px code-sidebar-button"></i><br><i id=close-code-editor-button title="Close Editor" class="gfg-icon gfg-icon_close-editor padding-2px code-sidebar-button close-code-editor-button"></i></p><div id=run-code-loader class=ring-load></div><p><i id=run-code-button lang=jscript title="Run Code and See Output" class="gfg-icon gfg-icon_play padding-2px code-sidebar-button"></i></p><div id=generate-url-loader class=ring-load></div><p><i id=generate-url-and-run-button title="Run Code and Generate IDE URL" lang=jscript class="gfg-icon gfg-icon_link padding-2px code-sidebar-button generate-url-and-run-button"></i><br><i title="Dark Mode" class="gfg-icon gfg-icon_dark-toggle padding-2px code-sidebar-button dark-editor-button"></i><br><i id=edit-on-ide-button title="Edit on IDE" lang=jscript class="gfg-icon gfg-icon_code padding-2px code-sidebar-button edit-on-ide-button"></i></div></p></div></p></div></p></div><div class=code-container><div id=highlighter_502710 class="syntaxhighlighter nogutter"><table border=0 cellpadding=0 cellspacing=0><tbody><tr><td class=code><div class=container><div class="line number1 index0 alt2"><code class=plain>import React, { useState } from </code><code class=string>'react'</code><code class=plain>;</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class=keyword>function</code> <code class=plain>App() {</code></div><div class="line number4 index3 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>const [click, setClick] = useState(0);</code></div><div class="line number5 index4 alt2">&nbsp;</div><div class="line number6 index5 alt1">&nbsp;</div><div class="line number7 index6 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>return</code> <code class=plain>(</code></div><div class="line number8 index7 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>&lt;div></code></div><div class="line number9 index8 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>&lt;p>You</code><code class=string>'ve clicked {click} times!&lt;/p></code></div><div class="line number10 index9 alt1">&nbsp;</div><div class="line number11 index10 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=string>&lt;p>The number of times you have clicked</code></div><div class="line number12 index11 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=string>is {click % 2 == 0 ? '</code><code class=plain>even!</code><code class=string>' : '</code><code class=plain>odd!'}&lt;/p></code></div><div class="line number13 index12 alt2">&nbsp;</div><div class="line number14 index13 alt1">&nbsp;</div><div class="line number15 index14 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>&lt;button onClick={() => setClick(click => click + 1)}></code></div><div class="line number16 index15 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>Click me</code></div><div class="line number17 index16 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>&lt;/button></code></div><div class="line number18 index17 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>&lt;/div></code></div><div class="line number19 index18 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>);</code></div><div class="line number20 index19 alt1"><code class=plain>}</code></div><div class="line number21 index20 alt2">&nbsp;</div><div class="line number22 index21 alt1"><code class=plain>export </code><code class=keyword>default</code> <code class=plain>App;</code></div></div></td></tr></tbody></table></div></div><div class=code-editor-container></div></p></div><div class=code-output-container><div class=output-block><i id=output-icon title=Output class="gfg-icon gfg-icon_arrow-right-editor padding-2px code-sidebar-button output-icon"></i></p><pre style="background-color: grey;" class=output-pre></pre></p></div><div class=ide-link-div><i id=copy-url-button title="Copy Generated Ide URL" class="gfg-icon gfg-icon_copy padding-2px code-sidebar-button copy-url-button"></i></p><pre style="background-color: grey;" id=ide-url></pre></p></div></p></div></div></div></div><p dir=ltr><b><strong>Output:</strong></b></p><p dir=ltr><img src=https://media.geeksforgeeks.org/wp-content/uploads/20200517194307/20200517_194143.gif width=inherit height=inherit></p><p dir=ltr><span>Note that in the above example, we are using an arrow function inside setClick() that fetches the previous value of click and uses it to update it with the new value. This form is useful in cases where it is necessary to perform data manipulations based on the value of the state variable.</span></p><h3><b><strong>Updating arrays and object using useState hook</strong></b></h3><p dir=ltr><span>Sometimes we only want part of a state object to be updated instead of the whole state to do that we use the spread operator to fetch previous values and then add the new value</span></p><div style="text-align:center;margin:20px 0;max-height:280px" id=GFG_AD_gfg_outstream_incontent></div><p dir=ltr><b><strong>Example:</strong></b><span> Program to demonstrate the use of arrays as a state variable (using useState()).&nbsp;</span></p><p dir=ltr><b><strong>Filename- App.js</strong></b></p><div class=noIdeBtnDiv><div class=responsive-tabs><h2 class=tabtitle>javascript</h2><div class=tabcontent></p><div class=code-block><div class=code-gutter><div class=editor-buttons-container><div class=editor-buttons><div class=editor-buttons-div title="Run and Edit"><i id=copy-code-button title="Copy Code" class="gfg-icon gfg-icon_copy code-sidebar-button padding-2px copy-code-button"></i></p><div id=run-and-edit-loader class=ring-load></div><p><i id=run-and-edit-button title="Edit Code" lang=jscript class="gfg-icon gfg-icon_edit_1 padding-2px code-sidebar-button"></i><br><i id=close-code-editor-button title="Close Editor" class="gfg-icon gfg-icon_close-editor padding-2px code-sidebar-button close-code-editor-button"></i></p><div id=run-code-loader class=ring-load></div><p><i id=run-code-button lang=jscript title="Run Code and See Output" class="gfg-icon gfg-icon_play padding-2px code-sidebar-button"></i></p><div id=generate-url-loader class=ring-load></div><p><i id=generate-url-and-run-button title="Run Code and Generate IDE URL" lang=jscript class="gfg-icon gfg-icon_link padding-2px code-sidebar-button generate-url-and-run-button"></i><br><i title="Dark Mode" class="gfg-icon gfg-icon_dark-toggle padding-2px code-sidebar-button dark-editor-button"></i><br><i id=edit-on-ide-button title="Edit on IDE" lang=jscript class="gfg-icon gfg-icon_code padding-2px code-sidebar-button edit-on-ide-button"></i></div></p></div></p></div></p></div><div class=code-container><div id=highlighter_175326 class="syntaxhighlighter nogutter"><table border=0 cellpadding=0 cellspacing=0><tbody><tr><td class=code><div class=container><div class="line number1 index0 alt2"><code class=plain>import React, { useState } from </code><code class=string>'react'</code><code class=plain>;</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class=keyword>function</code> <code class=plain>App() {</code></div><div class="line number4 index3 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>const [click, setClick] = useState([]);</code></div><div class="line number5 index4 alt2">&nbsp;</div><div class="line number6 index5 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>const addNumber = () => {</code></div><div class="line number7 index6 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>setClick([</code></div><div class="line number8 index7 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>...click,</code></div><div class="line number9 index8 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>{</code></div><div class="line number10 index9 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>id: click.length,</code></div><div class="line number11 index10 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>value: Math.random() * 10</code></div><div class="line number12 index11 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>}</code></div><div class="line number13 index12 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>]);</code></div><div class="line number14 index13 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>};</code></div><div class="line number15 index14 alt2">&nbsp;</div><div class="line number16 index15 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>return</code> <code class=plain>(</code></div><div class="line number17 index16 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>&lt;div></code></div><div class="line number18 index17 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>&lt;ul></code></div><div class="line number19 index18 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>{click.map(item => (</code></div><div class="line number20 index19 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>&lt;li key={item.id}>{item.value}&lt;/li></code></div><div class="line number21 index20 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>))}</code></div><div class="line number22 index21 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>&lt;/ul></code></div><div class="line number23 index22 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>&lt;button onClick={addNumber}></code></div><div class="line number24 index23 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>Click me</code></div><div class="line number25 index24 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>&lt;/button></code></div><div class="line number26 index25 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>&lt;/div></code></div><div class="line number27 index26 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>);</code></div><div class="line number28 index27 alt1"><code class=plain>}</code></div><div class="line number29 index28 alt2">&nbsp;</div><div class="line number30 index29 alt1"><code class=plain>export </code><code class=keyword>default</code> <code class=plain>App;</code></div></div></td></tr></tbody></table></div></div><div class=code-editor-container></div></p></div><div class=code-output-container><div class=output-block><i id=output-icon title=Output class="gfg-icon gfg-icon_arrow-right-editor padding-2px code-sidebar-button output-icon"></i></p><pre style="background-color: grey;" class=output-pre></pre></p></div><div class=ide-link-div><i id=copy-url-button title="Copy Generated Ide URL" class="gfg-icon gfg-icon_copy padding-2px code-sidebar-button copy-url-button"></i></p><pre style="background-color: grey;" id=ide-url></pre></p></div></p></div></div></div></div><p dir=ltr><b><strong>Output:</strong></b></p><p dir=ltr><img src=https://media.geeksforgeeks.org/wp-content/uploads/20200517200622/20200517_200320.gif width=inherit height=inherit></p><p dir=ltr><span>useState() works differently from the setState() function (which is used to change the value of state variables in class-based components) when it comes to using arrays. setClick() does not merge new values with the existing ones on being called, it simply overwrites them with the new value. Hence, it is necessary to find a workaround for appending the existing values, which is done inside the addNumber() internal function with the help of the spread operator. The function creates a new variable with a certain id and value and adds it to the existing array (whose values are copied into the function using the spread operator).&nbsp;</span><br><span>If one needs to deal with multiple types of data at once, the best way to go for is with an object. While the same work can be done with separate state variables, objects make work much more efficient in the long run (also one can make do with fewer useState() declarations).&nbsp;</span></p><p dir=ltr><b><strong>Example:</strong></b><span> Program to demonstrate the use of objects as a state variable (using useState()).&nbsp;</span></p><p dir=ltr><b><strong>Filename- App.js</strong></b></p><div class=noIdeBtnDiv><div class=responsive-tabs><h2 class=tabtitle>javascript</h2><div class=tabcontent></p><div class=code-block><div class=code-gutter><div class=editor-buttons-container><div class=editor-buttons><div class=editor-buttons-div title="Run and Edit"><i id=copy-code-button title="Copy Code" class="gfg-icon gfg-icon_copy code-sidebar-button padding-2px copy-code-button"></i></p><div id=run-and-edit-loader class=ring-load></div><p><i id=run-and-edit-button title="Edit Code" lang=jscript class="gfg-icon gfg-icon_edit_1 padding-2px code-sidebar-button"></i><br><i id=close-code-editor-button title="Close Editor" class="gfg-icon gfg-icon_close-editor padding-2px code-sidebar-button close-code-editor-button"></i></p><div id=run-code-loader class=ring-load></div><p><i id=run-code-button lang=jscript title="Run Code and See Output" class="gfg-icon gfg-icon_play padding-2px code-sidebar-button"></i></p><div id=generate-url-loader class=ring-load></div><p><i id=generate-url-and-run-button title="Run Code and Generate IDE URL" lang=jscript class="gfg-icon gfg-icon_link padding-2px code-sidebar-button generate-url-and-run-button"></i><br><i title="Dark Mode" class="gfg-icon gfg-icon_dark-toggle padding-2px code-sidebar-button dark-editor-button"></i><br><i id=edit-on-ide-button title="Edit on IDE" lang=jscript class="gfg-icon gfg-icon_code padding-2px code-sidebar-button edit-on-ide-button"></i></div></p></div></p></div></p></div><div class=code-container><div id=highlighter_875913 class="syntaxhighlighter nogutter"><table border=0 cellpadding=0 cellspacing=0><tbody><tr><td class=code><div class=container><div class="line number1 index0 alt2"><code class=plain>import React, { useState } from </code><code class=string>'react'</code><code class=plain>;</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class=keyword>function</code> <code class=plain>App() {</code></div><div class="line number4 index3 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>const [data, setData] = useState({</code></div><div class="line number5 index4 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>username: </code><code class=string>''</code><code class=plain>,</code></div><div class="line number6 index5 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>password: </code><code class=string>''</code></div><div class="line number7 index6 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>});</code></div><div class="line number8 index7 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>const [form, setForm] = useState({</code></div><div class="line number9 index8 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>username: </code><code class=string>''</code><code class=plain>,</code></div><div class="line number10 index9 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>password: </code><code class=string>''</code></div><div class="line number11 index10 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>});</code></div><div class="line number12 index11 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>const [submit, submitted] = useState(</code><code class=keyword>false</code><code class=plain>);</code></div><div class="line number13 index12 alt2">&nbsp;</div><div class="line number14 index13 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>const printValues = e => {</code></div><div class="line number15 index14 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>e.preventDefault();</code></div><div class="line number16 index15 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>setForm({</code></div><div class="line number17 index16 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>username: data.username,</code></div><div class="line number18 index17 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>password: data.password</code></div><div class="line number19 index18 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>});</code></div><div class="line number20 index19 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>submitted(</code><code class=keyword>true</code><code class=plain>);</code></div><div class="line number21 index20 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>};</code></div><div class="line number22 index21 alt1">&nbsp;</div><div class="line number23 index22 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>const updateField = e => {</code></div><div class="line number24 index23 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>setData({</code></div><div class="line number25 index24 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>...data,</code></div><div class="line number26 index25 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>[e.target.name]: e.target.value</code></div><div class="line number27 index26 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>});</code></div><div class="line number28 index27 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>};</code></div><div class="line number29 index28 alt2">&nbsp;</div><div class="line number30 index29 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>return</code> <code class=plain>(</code></div><div class="line number31 index30 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>&lt;div></code></div><div class="line number32 index31 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>&lt;form onSubmit={printValues}></code></div><div class="line number33 index32 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>&lt;label></code></div><div class="line number34 index33 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>Username:</code></div><div class="line number35 index34 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>&lt;input</code></div><div class="line number36 index35 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>value={data.username}</code></div><div class="line number37 index36 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>name=</code><code class=string>"username"</code></div><div class="line number38 index37 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>onChange={updateField}</code></div><div class="line number39 index38 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>/></code></div><div class="line number40 index39 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>&lt;/label></code></div><div class="line number41 index40 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>&lt;br /></code></div><div class="line number42 index41 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>&lt;label></code></div><div class="line number43 index42 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>Password:</code></div><div class="line number44 index43 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>&lt;input</code></div><div class="line number45 index44 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>value={data.password}</code></div><div class="line number46 index45 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>name=</code><code class=string>"password"</code></div><div class="line number47 index46 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>type=</code><code class=string>"password"</code></div><div class="line number48 index47 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>onChange={updateField}</code></div><div class="line number49 index48 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>/></code></div><div class="line number50 index49 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>&lt;/label></code></div><div class="line number51 index50 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>&lt;br /></code></div><div class="line number52 index51 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>&lt;button>Submit&lt;/button></code></div><div class="line number53 index52 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>&lt;/form></code></div><div class="line number54 index53 alt1">&nbsp;</div><div class="line number55 index54 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>&lt;p>{submit ? form.username : </code><code class=keyword>null</code><code class=plain>}&lt;/p></code></div><div class="line number56 index55 alt1">&nbsp;</div><div class="line number57 index56 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>&lt;p>{submit ? form.password : </code><code class=keyword>null</code><code class=plain>}&lt;/p></code></div><div class="line number58 index57 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>&lt;/div></code></div><div class="line number59 index58 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>);</code></div><div class="line number60 index59 alt1"><code class=plain>}</code></div><div class="line number61 index60 alt2">&nbsp;</div><div class="line number62 index61 alt1"><code class=plain>export </code><code class=keyword>default</code> <code class=plain>App;</code></div></div></td></tr></tbody></table></div></div><div class=code-editor-container></div></p></div><div class=code-output-container><div class=output-block><i id=output-icon title=Output class="gfg-icon gfg-icon_arrow-right-editor padding-2px code-sidebar-button output-icon"></i></p><pre style="background-color: grey;" class=output-pre></pre></p></div><div class=ide-link-div><i id=copy-url-button title="Copy Generated Ide URL" class="gfg-icon gfg-icon_copy padding-2px code-sidebar-button copy-url-button"></i></p><pre style="background-color: grey;" id=ide-url></pre></p></div></p></div></div></div></div><p dir=ltr><b><strong>Output:</strong></b></p><p dir=ltr><img src=https://media.geeksforgeeks.org/wp-content/uploads/20200517204359/20200517_204257.gif width=inherit height=inherit></p><p dir=ltr><span>In the above example, the &#8216;data&#8217; variable is used to temporarily store the entered values for the username and password fields. The spread operator is used again, to copy the existing value of the fields and update it accordingly. The &#8216;form&#8217; variable is used to store the value of the values submitted through the form used in the component &#8211; which is then displayed below the form. Note that the spread operator isn&#8217;t used with setForm() while updating the &#8216;form&#8217; state variable for the simple reason that one does not need to be bothered about the previously submitted values of the username and password fields.&nbsp;</span></p><br><div id=AP_G4GR_6></div></div><div class=article-bottom-buttons style=margin-bottom:.5%;display:flex><div style=font-family:var(--font-primary);color:var(--gfg-color-lg);font-size:16px<pre><textarea>import { useState } from "react"
const Myfunc = (prpos) => {
    const [comments, setComments] = useState([]);
  // Initialize state for the current comment being typed
  const [currentComment, setCurrentComment] = useState('');

  // Function to handle comment submission
  const handleSubmit = (e) => {
    e.preventDefault();

    // Check if the current comment is not empty
    if (currentComment.trim() !== '') {
      // Add the current comment to the comments array
      setComments([...comments, currentComment]);
      // Clear the current comment input
      setCurrentComment('');
    }
  };

  return (
    <div>
      <h2>Comment Box</h2>
      <form onSubmit={handleSubmit}>
        <textarea
          rows="4"
          cols="50"
          placeholder="Write a comment..."
          value={currentComment}
          onChange={(e) => setCurrentComment(e.target.value)}
        />
        <br />
        <button type="submit">Submit</button>
      </form>

      <div>
        <h3>Comments:</h3>
        <ul>
          {comments.map((comment, index) => (
            <li key={index}>{comment}</li>
          ))}
        </ul>
      </div>
    </div>
  );
}
export default Myfunc</textarea></pre>></body></html>